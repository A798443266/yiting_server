<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.luo.yiting.mapper.ParkOrderMapper" >
  <resultMap id="BaseResultMap" type="com.luo.yiting.bean.ParkOrder" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="price" property="price" jdbcType="REAL" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="startTime" property="starttime" jdbcType="TIME" />
    <result column="endTime" property="endtime" jdbcType="TIME" />
    <result column="parkLotId" property="parklotid" jdbcType="INTEGER" />
    <result column="userId" property="userid" jdbcType="INTEGER" />
    <result column="createTime" property="createtime" jdbcType="DATE" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, price, status, startTime, endTime, parkLotId, userId, createTime, remark
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.luo.yiting.bean.ParkOrderExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from park_order
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from park_order
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from park_order
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.luo.yiting.bean.ParkOrderExample" >
    delete from park_order
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.luo.yiting.bean.ParkOrder" >
    insert into park_order (id, price, status, 
      startTime, endTime, parkLotId, 
      userId, createTime, remark
      )
    values (#{id,jdbcType=INTEGER}, #{price,jdbcType=REAL}, #{status,jdbcType=INTEGER}, 
      #{starttime,jdbcType=TIME}, #{endtime,jdbcType=TIME}, #{parklotid,jdbcType=INTEGER}, 
      #{userid,jdbcType=INTEGER}, #{createtime,jdbcType=DATE}, #{remark,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.luo.yiting.bean.ParkOrder" >
    insert into park_order
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="price != null" >
        price,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="starttime != null" >
        startTime,
      </if>
      <if test="endtime != null" >
        endTime,
      </if>
      <if test="parklotid != null" >
        parkLotId,
      </if>
      <if test="userid != null" >
        userId,
      </if>
      <if test="createtime != null" >
        createTime,
      </if>
      <if test="remark != null" >
        remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="price != null" >
        #{price,jdbcType=REAL},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="starttime != null" >
        #{starttime,jdbcType=TIME},
      </if>
      <if test="endtime != null" >
        #{endtime,jdbcType=TIME},
      </if>
      <if test="parklotid != null" >
        #{parklotid,jdbcType=INTEGER},
      </if>
      <if test="userid != null" >
        #{userid,jdbcType=INTEGER},
      </if>
      <if test="createtime != null" >
        #{createtime,jdbcType=DATE},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.luo.yiting.bean.ParkOrderExample" resultType="java.lang.Integer" >
    select count(*) from park_order
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update park_order
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.price != null" >
        price = #{record.price,jdbcType=REAL},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.starttime != null" >
        startTime = #{record.starttime,jdbcType=TIME},
      </if>
      <if test="record.endtime != null" >
        endTime = #{record.endtime,jdbcType=TIME},
      </if>
      <if test="record.parklotid != null" >
        parkLotId = #{record.parklotid,jdbcType=INTEGER},
      </if>
      <if test="record.userid != null" >
        userId = #{record.userid,jdbcType=INTEGER},
      </if>
      <if test="record.createtime != null" >
        createTime = #{record.createtime,jdbcType=DATE},
      </if>
      <if test="record.remark != null" >
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update park_order
    set id = #{record.id,jdbcType=INTEGER},
      price = #{record.price,jdbcType=REAL},
      status = #{record.status,jdbcType=INTEGER},
      startTime = #{record.starttime,jdbcType=TIME},
      endTime = #{record.endtime,jdbcType=TIME},
      parkLotId = #{record.parklotid,jdbcType=INTEGER},
      userId = #{record.userid,jdbcType=INTEGER},
      createTime = #{record.createtime,jdbcType=DATE},
      remark = #{record.remark,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.luo.yiting.bean.ParkOrder" >
    update park_order
    <set >
      <if test="price != null" >
        price = #{price,jdbcType=REAL},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="starttime != null" >
        startTime = #{starttime,jdbcType=TIME},
      </if>
      <if test="endtime != null" >
        endTime = #{endtime,jdbcType=TIME},
      </if>
      <if test="parklotid != null" >
        parkLotId = #{parklotid,jdbcType=INTEGER},
      </if>
      <if test="userid != null" >
        userId = #{userid,jdbcType=INTEGER},
      </if>
      <if test="createtime != null" >
        createTime = #{createtime,jdbcType=DATE},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.luo.yiting.bean.ParkOrder" >
    update park_order
    set price = #{price,jdbcType=REAL},
      status = #{status,jdbcType=INTEGER},
      startTime = #{starttime,jdbcType=TIME},
      endTime = #{endtime,jdbcType=TIME},
      parkLotId = #{parklotid,jdbcType=INTEGER},
      userId = #{userid,jdbcType=INTEGER},
      createTime = #{createtime,jdbcType=DATE},
      remark = #{remark,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>